{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "co2",
	"scopeName": "co2",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#pipeline"
		},
		{
			"include": "#import"
		}
	],
	"repository": {
		"embedded": {
			"patterns": [
				{
					"begin": "```(js|javascript)\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.javascript",
					"patterns": [
						{
							"include": "source.js"
						}
					]
				},
				{
					"begin": "```typescript\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.typescript",
					"patterns": [
						{
							"include": "source.ts"
						}
					]
				},
				{
					"begin": "```json\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.json",
					"patterns": [
						{
							"include": "source.json"
						}
					]
				},
				{
					"begin": "```go\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.go",
					"patterns": [
						{
							"include": "source.go"
						}
					]
				},
				{
					"begin": "```(yml|yaml)\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.yaml",
					"patterns": [
						{
							"include": "source.yaml"
						}
					]
				},
				{
					"begin": "```(html|text)\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"include": "text.html.derivative"
						}
					]
				},
				{
					"begin": "```(md|markdown)\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"include": "text.html.markdown"
						}
					]
				},
				{
					"begin": "```python\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.python",
					"patterns": [
						{
							"include": "source.python"
						}
					]
				},
				{
					"begin": "```rhai\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.rhai",
					"patterns": [
						{
							"include": "source.rhai"
						}
					]
				},
				{
					"begin": "```php\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.php",
					"patterns": [
						{
							"include": "source.php"
						}
					]
				},
				{
					"begin": "```(sh|bash|shell)\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.shell",
					"patterns": [
						{
							"include": "source.shell"
						}
					]
				},
				{
					"begin": "```xml\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.xml",
					"patterns": [
						{
							"include": "text.xml"
						}
					]
				},
				{
					"begin": "(```hbs|```)\n",
					"end": "```",
					"beginCaptures": {
						"0": {
							"name": "punctuation.code.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.code.close"
						}
					},
					"name": "meta.embedded.block.hbs",
					"patterns": [
						{
							"include": "text.html.handlebars"
						}
					]
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"comment": "Single line comments with double-slash",
					"match": "(//)+(.*)",
					"captures": {
						"0": {
							"name": "comment.line.double-slash.co2"
						}
					}
				},
				{
					"comment": "Multiple line comment block",
					"begin": "/\\*",
					"beginCaptures": {
						"0": {
							"name": "comment.block.documentation.co2"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "comment.block.documentation.co2"
						}
					},
					"contentName": "comment.block.documentation.co2"
				}
			]
		},
		"pipeline": {
			"patterns": [
				{
					"begin": "pipeline\\s*\\{",
					"captures": {
						"0": {
							"name": "support.type"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"include": "$self"
						},
						{
							"include": "#modules"
						}
					]
				}
			]
		},
		"import": {
			"patterns": [
				{
					"begin": "import\\s*\\{",
					"captures": {
						"0": {
							"name": "support.type"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"include": "$self"
						},
						{
							"include": "#modules_import"
						}
					]
				}
			]
		},
		"modules": {
			"patterns": [
				{
					"begin": "([\\w-]+)((\\s([\\w-]+))|)\\s*\\{",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function"
						},
						"1": {
							"name": "storage.type.struct"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"include": "$self"
						},
						{
							"include": "#macro"
						},
						{
							"include": "#attach"
						},
						{
							"include": "#param"
						}
					]
				}
			]
		},
		"modules_import": {
			"patterns": [
				{
					"begin": "([\\w-]+)(\\s\".*\"|)\\s*\\(",
					"beginCaptures": {
						"0": {
							"name": "storage.type.struct",
							"patterns": [
								{
									"include": "#string"
								}
							]
						}
					},
					"end": "\\)",
					"patterns": [
						{
							"include": "#param"
						}
					]
				},
				{
					"match": "([\\w-]+)(\\s\".*\"|)",
					"captures": {
						"0": {
							"name": "storage.type.struct",
							"patterns": [
								{
									"include": "$self"
								},
								{
									"include": "#numeric"
								},
								{
									"include": "#constant"
								},
								{
									"include": "#array"
								},
								{
									"include": "#map"
								},
								{
									"include": "#string"
								}
							]
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			]
		},
		"macro": {
			"patterns": [
				{
					"begin": "([\\w-]+)((\\s[\\w-]+|)|(\\s(\".*\"|\\[.*\\]|\\{.*\\}))|)\\s*\\(",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.macro",
							"patterns": [
								{
									"include": "$self"
								},
								{
									"include": "#numeric"
								},
								{
									"include": "#constant"
								},
								{
									"include": "#array"
								},
								{
									"include": "#map"
								},
								{
									"include": "#string"
								}
							]
						}
					},
					"end": "\\)",
					"patterns": [
						{
							"include": "$self"
						},
						{
							"include": "#param"
						},
						{
							"include": "#attach"
						},
						{
							"include": "#macro"
						}
					]
				}
			]
		},
		"attach": {
			"patterns": [
				{
					"match": "attach ([\\w-]+)",
					"captures": {
						"0": {
							"name": "keyword.control"
						},
						"1": {
							"name": "entity.name.function"
						}
					},
					"patterns": [
						{
							"include": "$self"
						},
						{
							"include": "#param"
						}
					]
				}
			]
		},
		"param": {
			"patterns": [
				{
					"begin": "([\\w\\.-]+)\\s*(=)\\s*",
					"beginCaptures": {
						"1": {
							"name": "variable.parameter.co2"
						},
						"2": {
							"name": "keyword.operator.co2"
						}
					},
					"end": "(?<!\\2)$",
					"endCaptures": {
						"0": {
							"name": "keyword.operator.co2"
						}
					},
					"patterns": [
						{
							"include": "#numeric"
						},
						{
							"include": "#constant"
						},
						{
							"include": "#array"
						},
						{
							"include": "#map"
						},
						{
							"include": "#embedded"
						},
						{
							"include": "#string"
						}
					]
				}
			]
		},
		"interpolation": {
			"patterns": [
				{
					"begin": "\\$\\{",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.co2"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "keyword.operator.co2"
						}
					},
					"patterns": [
						{
							"include": "#interpolation-function"
						},
						{
							"include": "#interpolation-reference"
						}
					]
				}
			]
		},
		"array": {
			"patterns": [
				{
					"begin": "\\[",
					"end": "\\]",
					"patterns": [
						{
							"include": "#numeric"
						},
						{
							"include": "#constant"
						},
						{
							"include": "#string"
						},
						{
							"match": "\\s*,\\s*"
						}
					]
				}
			]
		},
		"map": {
			"patterns": [
				{
					"begin": "\\{",
					"end": "\\}",
					"patterns": [
						{
							"begin": "(\"[\\w\\s\\.-]+\")\\s*(:)",
							"beginCaptures": {
								"1": {
									"name": "string.quoted.double.co2"
								},
								"2": {
									"name": "keyword.operator.co2"
								}
							},
							"end": "(?<!\\2)\\s*($|(?=\\}))",
							"endCaptures": {
								"0": {
									"name": "keyword.operator.co2"
								}
							},
							"patterns": [
								{
									"include": "#numeric"
								},
								{
									"include": "#constant"
								},
								{
									"include": "#string"
								},
								{
									"match": "\\s*,\\s*"
								}
							]
						}
					]
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"comment": "Numbers in decimal with optional suffixes",
					"match": "\\b[0-9\\.]+([kKmMgG]b?)?\\b",
					"captures": {
						"0": {
							"name": "constant.numeric.co2"
						}
					}
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"match": "\\b(true|false)\\b",
					"captures": {
						"0": {
							"name": "constant.numeric.co2"
						}
					}
				}
			]
		},
		"string": {
			"patterns": [
				{
					"comment": "Usual string",
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end"
						}
					},
					"patterns": [
						{
							"include": "#interpolation"
						},
						{
							"match": "[^\"]",
							"captures": {
								"0": {
									"name": "string.quoted.double.co2"
								}
							}
						}
					]
				}
			]
		}
	}
}